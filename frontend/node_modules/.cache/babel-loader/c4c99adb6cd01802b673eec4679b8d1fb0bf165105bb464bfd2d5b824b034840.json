{"ast":null,"code":"var _jsxFileName = \"/Users/leezahuor/Desktop/my-react-complete-guide/20/frontend/src/components/AuthForm.js\",\n  _s = $RefreshSig$();\nimport { Form, Link, useSearchParams, useActionData, useNavigation } from \"react-router-dom\";\n// search parameters = query parameters\n\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AuthForm() {\n  _s();\n  const data = useActionData();\n  const navigation = useNavigation();\n  const [searchParams] = useSearchParams();\n  const isLogin = searchParams.get(\"mode\") === \"login\";\n  // check if 'mode' query param is = to login => if it is, it's in login mode\n  // if it's set to any other value => then it's in signup mode\n\n  const isSubmitting = navigation.state === \"submitting\";\n  // helper constant => lets us know whether we're currently submitting\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      method: \"post\",\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isLogin ? \"Log in\" : \"Create a new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), data && data.errors &&\n      /*#__PURE__*/\n      // check if data exists and if theres errors\n      _jsxDEV(\"ul\", {\n        children: Object.values(data.errors).map((err // map all error messages to list items\n        ) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: err\n        }, err, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }, this) // list items where key is set = to error message\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), data && data.message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"email\",\n          name: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          name: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `?mode=${isLogin ? \"signup\" : \"login\"}`,\n          children: isLogin ? \"Create new user\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isSubmitting,\n          children: isSubmitting ? \"Submitting...\" : \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(AuthForm, \"PD1epQFmvNVxEf4knKlP+5RvjMI=\", false, function () {\n  return [useActionData, useNavigation, useSearchParams];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["Form","Link","useSearchParams","useActionData","useNavigation","classes","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthForm","_s","data","navigation","searchParams","isLogin","get","isSubmitting","state","children","method","className","form","fileName","_jsxFileName","lineNumber","columnNumber","errors","Object","values","map","err","message","htmlFor","id","type","name","required","actions","to","disabled","_c","$RefreshReg$"],"sources":["/Users/leezahuor/Desktop/my-react-complete-guide/20/frontend/src/components/AuthForm.js"],"sourcesContent":["import {\n  Form,\n  Link,\n  useSearchParams,\n  useActionData,\n  useNavigation,\n} from \"react-router-dom\";\n// search parameters = query parameters\n\nimport classes from \"./AuthForm.module.css\";\n\nfunction AuthForm() {\n  const data = useActionData();\n  const navigation = useNavigation();\n\n  const [searchParams] = useSearchParams();\n  const isLogin = searchParams.get(\"mode\") === \"login\";\n  // check if 'mode' query param is = to login => if it is, it's in login mode\n  // if it's set to any other value => then it's in signup mode\n\n  const isSubmitting = navigation.state === \"submitting\";\n  // helper constant => lets us know whether we're currently submitting\n\n  return (\n    <>\n      <Form method=\"post\" className={classes.form}>\n        <h1>{isLogin ? \"Log in\" : \"Create a new user\"}</h1>\n        {data &&\n          data.errors && ( // check if data exists and if theres errors\n            <ul>\n              {Object.values(data.errors).map(\n                (\n                  err // map all error messages to list items\n                ) => (\n                  <li key={err}>{err}</li> // list items where key is set = to error message\n                )\n              )}\n            </ul>\n          )}\n        {data && data.message && <p>{data.message}</p>}\n        {/* output error data messages  */}\n        <p>\n          <label htmlFor=\"email\">Email</label>\n          <input id=\"email\" type=\"email\" name=\"email\" required />\n        </p>\n        <p>\n          <label htmlFor=\"image\">Password</label>\n          <input id=\"password\" type=\"password\" name=\"password\" required />\n        </p>\n        <div className={classes.actions}>\n          <Link to={`?mode=${isLogin ? \"signup\" : \"login\"}`}>\n            {isLogin ? \"Create new user\" : \"Login\"}\n          </Link>\n          <button disabled={isSubmitting}>\n            {isSubmitting ? \"Submitting...\" : \"Save\"}\n          </button>\n        </div>\n      </Form>\n    </>\n  );\n}\n\nexport default AuthForm;\n"],"mappings":";;AAAA,SACEA,IAAI,EACJC,IAAI,EACJC,eAAe,EACfC,aAAa,EACbC,aAAa,QACR,kBAAkB;AACzB;;AAEA,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,IAAI,GAAGT,aAAa,EAAE;EAC5B,MAAMU,UAAU,GAAGT,aAAa,EAAE;EAElC,MAAM,CAACU,YAAY,CAAC,GAAGZ,eAAe,EAAE;EACxC,MAAMa,OAAO,GAAGD,YAAY,CAACE,GAAG,CAAC,MAAM,CAAC,KAAK,OAAO;EACpD;EACA;;EAEA,MAAMC,YAAY,GAAGJ,UAAU,CAACK,KAAK,KAAK,YAAY;EACtD;;EAEA,oBACEX,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACEZ,OAAA,CAACP,IAAI;MAACoB,MAAM,EAAC,MAAM;MAACC,SAAS,EAAEhB,OAAO,CAACiB,IAAK;MAAAH,QAAA,gBAC1CZ,OAAA;QAAAY,QAAA,EAAKJ,OAAO,GAAG,QAAQ,GAAG;MAAmB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,EAClDd,IAAI,IACHA,IAAI,CAACe,MAAM;MAAA;MAAM;MACfpB,OAAA;QAAAY,QAAA,EACGS,MAAM,CAACC,MAAM,CAACjB,IAAI,CAACe,MAAM,CAAC,CAACG,GAAG,CAC7B,CACEC,GAAG,CAAC;QAAA,kBAEJxB,OAAA;UAAAY,QAAA,EAAeY;QAAG,GAATA,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAY,CAAC;QAC1B;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEJ,EACFd,IAAI,IAAIA,IAAI,CAACoB,OAAO,iBAAIzB,OAAA;QAAAY,QAAA,EAAIP,IAAI,CAACoB;MAAO;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAE9CnB,OAAA;QAAAY,QAAA,gBACEZ,OAAA;UAAO0B,OAAO,EAAC,OAAO;UAAAd,QAAA,EAAC;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eACpCnB,OAAA;UAAO2B,EAAE,EAAC,OAAO;UAACC,IAAI,EAAC,OAAO;UAACC,IAAI,EAAC,OAAO;UAACC,QAAQ;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrD,eACJnB,OAAA;QAAAY,QAAA,gBACEZ,OAAA;UAAO0B,OAAO,EAAC,OAAO;UAAAd,QAAA,EAAC;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eACvCnB,OAAA;UAAO2B,EAAE,EAAC,UAAU;UAACC,IAAI,EAAC,UAAU;UAACC,IAAI,EAAC,UAAU;UAACC,QAAQ;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC9D,eACJnB,OAAA;QAAKc,SAAS,EAAEhB,OAAO,CAACiC,OAAQ;QAAAnB,QAAA,gBAC9BZ,OAAA,CAACN,IAAI;UAACsC,EAAE,EAAG,SAAQxB,OAAO,GAAG,QAAQ,GAAG,OAAQ,EAAE;UAAAI,QAAA,EAC/CJ,OAAO,GAAG,iBAAiB,GAAG;QAAO;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACjC,eACPnB,OAAA;UAAQiC,QAAQ,EAAEvB,YAAa;UAAAE,QAAA,EAC5BF,YAAY,GAAG,eAAe,GAAG;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACjC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD,iBACN;AAEP;AAACf,EAAA,CAjDQD,QAAQ;EAAA,QACFP,aAAa,EACPC,aAAa,EAETF,eAAe;AAAA;AAAAuC,EAAA,GAJ/B/B,QAAQ;AAmDjB,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}